pipeline{
    agent any
    parameters{
        string(name: 'name_container', defaultValue: 'practica-qa', description: 'nombre del docker')
        string(name: 'name_imagen', defaultValue: 'practica-qa', description: 'nombre de la imagen')
        string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
        string(name: 'puerto_imagen', defaultValue: '80', description: 'puerto a publicar')
    }
    environment{
        name_final = "${name_container}${tag_imagen}${puerto_imagen}"
    }
    stages{
        // stage('stop/rm'){
        //     when{
        //         expression {
        //             DOCKER_EXIST = sh(returnStdout: true, script: 'echo "$(docker ps -q --filter name=${name_final})"')
        //             return DOCKER_EXIST != ''
        //         }
        //     }
        //     steps{
        //         script{
        //             sh '''
        //                 docker stop ${name_final}
        //             '''
        //         }
        //     }
        // }

        stage('build'){
            steps {
                script{
                    // bat '''
                    //     docker build booksa/ -t ${name_imagen}:${tag_imagen}
                    // '''
                    bat '''
                        docker build booksa/ -t nombrePureba:v1
                    '''
                }
            }
        }

        stage('run'){
            steps{
                script{
                    bat '''
                        docker run -dp ${puerto_imagen}:80 --name ${name_final} ${name_imagen}:${tag_imagen}
                    '''
                }
            }
        }
        
    }
}